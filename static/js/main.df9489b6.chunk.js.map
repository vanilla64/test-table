{"version":3,"sources":["components/TableRow/TableRow.js","components/SelectColumnForm/SelectColumnForm.js","components/Preloader/Preloader.js","components/Table/Table.js","utils/constants.js","images/s13-pic.jpg","images/car-pic.jpg","images/s15.jpg","images/r34.gif","images/180sx.jpg","utils/Api.js","components/FormAddUser/FormAddUser.js","components/FilterForm/FilterForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TableRow","props","user","index","type","columnsRender","id","firstName","lastName","email","phone","gender","ipAddress","dollars","carModel","carYear","carVin","classnames","tableRow","className","rowType","visible","price","carImage","src","Math","floor","random","alt","renderRow","SelectColumnForm","tableHeaders","setColumnsRender","useState","optionsValues","setOptionsValues","onSubmit","evt","preventDefault","onChange","target","name","checked","prev","data-target","map","headerItem","defaultChecked","title","Preloader","Table","arr","keyName","data","usersToRender","setUsersToRender","isTableLoading","setIsTableLoading","isIncrease","setIsIncrease","Object","keys","idArr","i","console","log","onScroll","tableContainer","table","querySelector","length","scrollTop","offsetHeight","dataSlice","slice","dataToRender","concat","setTimeout","onClick","dataSort","item","reverse","sort","a","b","data-position","data-tooltip","TABLE_INFO","api","url","_initialRequest","res","ok","json","Promise","reject","status","getData","fetch","_url","method","then","this","FormAddUser","values","setValues","activeLabel","setActiveLabel","isValid","handleChange","value","isVisible","onReset","required","htmlFor","onFocus","onBlur","mask","radix","unmask","onAccept","disabled","FilterForm","setDataForRender","styles","submitButton","resetButton","inputId","filteredKeys","forEach","key","keysForSearch","filteredData","filter","toString","toLowerCase","includes","push","M","toast","html","reduceData","reduce","result","App","users","setUsers","isPreloaderVisible","setIsPreloaderVisible","isFormAddUserVisible","setIsFormAddUserVisible","dropdownBtn","document","querySelectorAll","Dropdown","init","closeOnClick","constrainWidth","tooltips","Tooltip","draggableTable","tableDragger","animation","on","window","getSelection","removeAllRanges","selection","empty","finally","catch","err","message","formData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df9489b6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TableRow(props) {\n  const { user, index, type, columnsRender } = props\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    phone,\n    gender,\n    ipAddress,\n    dollars,\n    carModel,\n    carYear,\n    carVin,\n  } = user;\n\n  const classnames = {\n    tableRow: index % 2 === 0\n      ? 'table__row table__row_type_odd'\n      : 'table__row table__row_type_even',\n  }\n\n  const renderRow = (rowType) => {\n    let row\n\n    switch (rowType) {\n      case 'fixed':\n        return row =\n          <>\n            <td>{ index + 1 }</td>\n            <td>{ id }</td>\n            <td>{ firstName }</td>\n            <td>{ lastName }</td>\n          </>\n\n      case 'scroll':\n        return row =\n          <>\n            { columnsRender.email.visible && <td className=\"table__cell_type_email\">{email}</td> }\n            { columnsRender.phone.visible && <td className=\"table__cell_type_phone\">{ phone }</td> }\n            { columnsRender.gender.visible && <td className=\"table__cell_type_gender\">{ gender }</td> }\n            { columnsRender.ipAddress.visible && <td className=\"table__cell_type_ip\">{ ipAddress }</td> }\n            { columnsRender.price.visible && <td className=\"table__cell_type_price\">{ dollars }</td> }\n            {\n              columnsRender.carImage.visible &&\n              <td className=\"table__cell_type_img\">\n                <img\n                  className=\"table__img\"\n                  src={columnsRender.carImage.src[Math.floor(Math.random() * 5)]} alt=\"Car\"\n                />\n              </td>\n            }\n            { columnsRender.carModel.visible && <td>{ carModel }</td> }\n            { columnsRender.carYear.visible && <td>{ carYear }</td> }\n            { columnsRender.carVin.visible && <td>{ carVin }</td> }\n          </>\n    }\n  }\n\n  return (\n    <tr className={ classnames.tableRow }>\n      { renderRow(type) }\n    </tr>\n  );\n}\n\nexport default TableRow;\n","import React, { useState } from 'react';\nimport './SelectColumnForm.css'\n\nfunction SelectColumnForm(props) {\n  const { tableHeaders, columnsRender, setColumnsRender } = props\n  const [optionsValues, setOptionsValues] = useState(columnsRender);\n\n  const handleDropdownChange = (evt) => {\n    const { name, checked } = evt.target;\n\n    setOptionsValues((prev) => {\n      return { ...prev, ...prev[name].visible = checked }\n    })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    setColumnsRender(optionsValues)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} onChange={handleDropdownChange} className=\"row\">\n      <button\n        className='dropdown-trigger col s4 btn deep-purple lighten-2'\n        data-target='dropdown1'>\n        Select columns\n      </button>\n      <button\n        type=\"submit\"\n        className=\"col s4 btn green lighten-2\">\n        Submit\n      </button>\n      <ul id='dropdown1' className='dropdown-content'>\n        {\n          tableHeaders.map((headerItem, index) => {\n\n            // console.log(headerItem.textContent.split(' ').join().replace(',', ''))\n            // if(index > 3) {\n              // const inputName = headerItem.textContent.split(' ').join().replace(',', '')\n              return (\n                <li key={index} className=\"dropdown-content__list-item\">\n                  <label>\n                    <input type=\"checkbox\" name={tableHeaders[index]} className=\"filled-in\" defaultChecked={true} />\n                    <span className=\"dropdown-content__text\">{ columnsRender[headerItem].title }</span>\n                  </label>\n                </li>\n              )\n            // }\n          })\n        }\n      </ul>\n    </form>\n  );\n}\n\nexport default SelectColumnForm;\n","import React from 'react';\n\nfunction Preloader() {\n  return (\n    <div className=\"preloader-wrapper active\">\n      <div className=\"spinner-layer spinner-red-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preloader;","import React, { useState } from 'react';\nimport './Table.css'\nimport TableRow from \"../TableRow/TableRow\";\nimport SelectColumnForm from \"../SelectColumnForm/SelectColumnForm\";\nimport Preloader from \"../Preloader/Preloader\";\n\nfunction Table(props) {\n  const {\n    data, usersToRender, setUsersToRender, columnsRender,\n    setColumnsRender, isTableLoading, setIsTableLoading\n  } = props\n\n  const [isIncrease, setIsIncrease] = useState(false);\n\n  const tableHeaders = Object.keys(columnsRender)\n\n  const idArr = usersToRender.map(i => {\n    return i.id\n  })\n\n  const selectKeysFromArr = (arr, keyName) => {\n    return arr.map(i => i[keyName])\n  }\n\n  console.log(idArr)\n\n  const handleScroll = (evt) => {\n    const tableContainer = evt.target\n    const table = evt.target.querySelector('table')\n\n    if(data.length <= usersToRender.length) {\n      return\n    }\n\n     if(!isTableLoading && tableContainer.scrollTop + tableContainer.offsetHeight >= table.offsetHeight) {\n       const dataSlice = data.slice(usersToRender.length, usersToRender.length + 50)\n       const dataToRender = usersToRender.concat(dataSlice)\n\n       setIsTableLoading(true)\n\n       // setTimout имитирует подгрузку с сервера\n       setTimeout(() => {\n         setUsersToRender(dataToRender)\n         setIsTableLoading(false)\n       }, 1500)\n\n       return\n     }\n  }\n\n  const handleSortId = () => {\n    let dataSort\n\n    if (isIncrease) {\n      dataSort = usersToRender.map(item => { return item }).reverse()\n      setUsersToRender(dataSort)\n      setIsIncrease(false)\n      return;\n    }\n\n    dataSort =\n      usersToRender.sort((a, b) => {\n        if (a.id > b.id) { return 1 }\n        if (a.id < b.id) { return -1 }\n        return 0\n      }).map(item => { return item })\n\n    setUsersToRender(dataSort)\n\n    setIsIncrease(true)\n  }\n\n  return (\n    <>\n      <SelectColumnForm\n        columnsRender={columnsRender}\n        setColumnsRender={setColumnsRender}\n        tableHeaders={tableHeaders}\n      />\n      <div onScroll={handleScroll} className=\"row table-container\">\n        <table className=\"striped table_type_fixed\">\n          <thead className=\"table__header\">\n          <tr>\n            <th>№</th>\n            <th\n              onClick={handleSortId}\n              className=\"table__cell_type_id tooltipped\"\n              data-position=\"bottom\" data-tooltip={`Total: ${selectKeysFromArr(usersToRender, 'id').length}`}>\n              ID <i className=\"material-icons table__icon\">{ isIncrease ? \"arrow_drop_up\" : \"arrow_drop_down\" }</i>\n            </th>\n            <th>First Name</th>\n            <th>Last Name</th>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            usersToRender.map((user, index) => (\n                <TableRow\n                  key={index}\n                  type={'fixed'}\n                  user={user}\n                  index={index}\n                />\n              )\n            )\n          }\n          </tbody>\n        </table>\n\n        <table className=\"striped table_type_scroll\">\n          <thead className=\"table__header\">\n            <tr>\n              { columnsRender.email.visible && <th>{ columnsRender.email.title }</th> }\n              { columnsRender.phone.visible && <th>{ columnsRender.phone.title }</th> }\n              { columnsRender.gender.visible && <th>{ columnsRender.gender.title }</th> }\n              { columnsRender.ipAddress.visible && <th>{ columnsRender.ipAddress.title }</th> }\n              { columnsRender.price.visible && <th>{ columnsRender.price.title }</th> }\n              { columnsRender.carImage.visible && <th>{ columnsRender.carImage.title }</th> }\n              { columnsRender.carModel.visible && <th>{ columnsRender.carModel.title }</th> }\n              { columnsRender.carYear.visible && <th>{ columnsRender.carYear.title }</th> }\n              { columnsRender.carVin.visible && <th>{ columnsRender.carVin.title }</th> }\n            </tr>\n          </thead>\n\n          <tbody>\n          {\n            usersToRender.map((user, index) => (\n                <TableRow\n                  key={index}\n                  type={'scroll'}\n                  columnsRender={columnsRender}\n                  user={user}\n                  index={index}\n                />\n              )\n            )\n          }\n          </tbody>\n        </table>\n        {\n          isTableLoading &&\n          <div className=\"table-container__preloader\">\n            <Preloader />\n          </div>\n        }\n      </div>\n      {\n        data.length <= usersToRender.length &&\n        <h5>No data anymore...</h5>\n      }\n\n\n\n\n\n\n\n\n      {/*{ data.length > 49 &&*/}\n      {/*<Pagination*/}\n      {/*  data={data}*/}\n      {/*  setUsersToRender={setUsersToRender}*/}\n      {/*  pageSize={50}*/}\n      {/*  portionSize={5} />*/}\n      {/*}*/}\n      {/*<table className=\"container table striped z-depth-4\">*/}\n      {/*  <thead className=\"table__header\">*/}\n      {/*    <tr>*/}\n      {/*      <th className=\"table__headercell table__headercell_pos_first\">№</th>*/}\n      {/*      <th*/}\n      {/*        onClick={handleSortId}*/}\n      {/*        className=\"center-align table__cell_type_id table__headercell table__headercell_pos_second\"*/}\n      {/*      >ID <i className=\"material-icons\">{ isIncrease ? \"arrow_drop_up\" : \"arrow_drop_down\" }</i>*/}\n      {/*      </th>*/}\n      {/*      <th>First Name</th>*/}\n      {/*      <th>Last Name</th>*/}\n      {/*      <th>Email</th>*/}\n      {/*      <th>Phone</th>*/}\n      {/*      <th>Gender</th>*/}\n      {/*      <th>IP Address</th>*/}\n      {/*      <th>Money</th>*/}\n      {/*      <th>Car Model</th>*/}\n      {/*      <th>Car Year</th>*/}\n      {/*      <th>Car VIN</th>*/}\n      {/*      /!**!/*/}\n      {/*      <th>First Name</th>*/}\n      {/*      <th>Last Name</th>*/}\n      {/*      <th>Email</th>*/}\n      {/*      <th>Phone</th>*/}\n      {/*      <th>Gender</th>*/}\n      {/*      <th>IP Address</th>*/}\n      {/*      <th>Money</th>*/}\n      {/*      <th>Car Model</th>*/}\n      {/*      <th>Car Year</th>*/}\n      {/*      <th>Car VIN</th>*/}\n      {/*    </tr>*/}\n      {/*  </thead>*/}\n\n        {/*<tbody>*/}\n        {/*{*/}\n        {/*  usersToRender.map((user, index) => (*/}\n        {/*      <TableRow*/}\n        {/*        key={index}*/}\n        {/*        user={user}*/}\n        {/*        index={index}*/}\n        {/*        handleRowClick={handleRowClick}*/}\n        {/*      />*/}\n        {/*    )*/}\n        {/*  )*/}\n        {/*}*/}\n        {/*</tbody>*/}\n      {/*</table>*/}\n    </>\n  );\n}\n\nexport default Table;\n","import s13 from '../images/s13-pic.jpg'\nimport s14 from '../images/car-pic.jpg'\nimport s15 from '../images/s15.jpg'\nimport r34 from '../images/r34.gif'\nimport sx180 from '../images/180sx.jpg'\n\nexport const MIN_DATA_FETCH = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\nexport const MAX_DATA_FETCH = 'http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D'\nexport const DATA_FETCH = 'https://my.api.mockaroo.com/test.json?key=94d3b3a0'\n\nconst cars = [s13, s14, s15, r34, sx180]\n\nexport const TABLE_INFO =\n  {\n    email: {\n      visible: true,\n      title: 'Email'\n    },\n    phone: {\n      visible: true,\n      title: 'Phone'\n    },\n    gender: {\n      visible: true,\n      title: 'Gender'\n    },\n    ipAddress: {\n      visible: true,\n      title: 'IP Address'\n    },\n    price: {\n      visible: true,\n      title: 'Price'\n    },\n    carImage: {\n      visible: true,\n      title: 'Car Image',\n      src: cars\n    },\n    carModel: {\n      visible: true,\n      title: 'Car Model'\n    },\n    carYear: {\n      visible: true,\n      title: 'Car Year'\n    },\n    carVin: {\n      visible: true,\n      title: 'Car VIN'\n    }\n  }\n","export default __webpack_public_path__ + \"static/media/s13-pic.6c852926.jpg\";","export default __webpack_public_path__ + \"static/media/car-pic.d18fd59d.jpg\";","export default __webpack_public_path__ + \"static/media/s15.4e26aa40.jpg\";","export default __webpack_public_path__ + \"static/media/r34.29eff04f.gif\";","export default __webpack_public_path__ + \"static/media/180sx.6972186e.jpg\";","import { DATA_FETCH } from './constants';\n\nclass Api {\n  constructor(url) {\n    this._url = url\n  }\n\n  _initialRequest = (res) => {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getData = () => {\n    return fetch(this._url, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n}\n\nconst api = new Api(DATA_FETCH)\n\nexport default api;\n","import React, { useState } from 'react';\nimport { IMaskInput } from 'react-imask';\n\nfunction FormAddUser(props) {\n  const [values, setValues] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: ''\n  });\n\n  const [activeLabel, setActiveLabel] = useState(false);\n\n  let isValid =\n    values.id === '' || values.firstName === '' ||\n    values.lastName === '' || values.email === '' || values.phone === ''\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n\n    setValues((prev) => {\n      return { ...prev, [name]: value }\n    })\n  }\n\n  const handleFocus = () => {\n    setActiveLabel(true)\n  }\n\n  const handleBlur = (evt) => {\n    const { value } = evt.target\n\n    if (value.length === 0) {\n      setActiveLabel(false)\n    }\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    props.onSubmit(values)\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  const handleReset = () => {\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  return (\n    props.isVisible &&\n    <section>\n      <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n        <h4>Add user</h4>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.id}\n            name=\"id\" id=\"id\" type=\"number\" className=\"validate\" required />\n          <label htmlFor=\"id\">Id</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.firstName}\n            name=\"firstName\" id=\"first-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"first-name\">First Name</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.lastName}\n            name=\"lastName\" id=\"last-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"last-name\">Last Name</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <input\n            onChange={handleChange}\n            value={values.email}\n            name=\"email\" id=\"email\" type=\"email\" className=\"validate\" required />\n          <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <IMaskInput\n            id=\"phone\"\n            // type=\"tel\"\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            mask={'(000)000-0000'}\n            radix=\".\"\n            value={values.phone}\n            unmask={false}\n            onAccept={(value) => {\n              setValues(prev => { return { ...prev, phone: value } })\n            }}\n          />\n          <label className={activeLabel ? 'active' : ''} htmlFor=\"phone\">Phone</label>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={isValid}\n          className=\"col s4 waves-effect waves-light btn green lighten-2\">Add</button>\n        <button\n          type=\"reset\"\n          className=\"col s4 waves-effect waves-light btn black-text transparent\">Reset</button>\n      </form>\n\n    </section>\n  );\n}\n\nexport default FormAddUser;\n","import React, { useState } from 'react';\nimport M from 'materialize-css';\n\nfunction FilterForm(props) {\n  const { data, setDataForRender } = props;\n  const [values, setValues] = useState({});\n\n  const styles = {\n    submitButton: data.length < 50\n      ? 'col s1 waves-effect waves-light btn green lighten-2'\n      : 'col s2 waves-effect waves-light btn green lighten-2',\n\n    resetButton: 'col s2 waves-effect waves-light btn black-text transparent',\n\n    inputId: data.length < 50\n      ? 'input-field col s1'\n      : 'input-field col s2'\n  }\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setValues((prev) => { return { ...prev, [name]: value } })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n\n    let filteredKeys = {}\n\n    const keys = Object.keys(values) // создаем массив ключей из стейта\n\n    keys.forEach(key => { // удаляем пустые свойства\n      if (values[key] !== '') {\n        filteredKeys[key] = values[key]\n      } else { return }\n    })\n\n    const keysForSearch = Object.keys(filteredKeys)\n\n    let filteredData = []\n\n    keysForSearch.forEach(key => {\n      let arr =\n        data.filter(\n          item => item[key].toString().toLowerCase().includes(values[key].toLowerCase())\n        )\n\n      arr.forEach(i => filteredData.push(i))\n    })\n\n    if (filteredData.length === 0) {\n      return M.toast({ html: 'User not found' })\n    } else {\n      const reduceData = filteredData.reduce((result, item) => {\n        return result.includes(item) ? result : [...result, item] // удаляем повторяющиеся объекты\n      }, [])\n\n      setDataForRender(reduceData)\n    }\n  }\n\n  const handleReset = () => {\n    setDataForRender(data.slice(0, 50))\n    setValues({})\n  }\n\n  return (\n    <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n      <h4>Filter</h4>\n      <div className={styles.inputId}>\n        <input\n          onChange={handleChange}\n          value={values.id ? values.id : ''}\n          name=\"id\" id=\"filterId\" type=\"number\" className=\"validate\" />\n        <label htmlFor=\"filterId\">Id</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.firstName ? values.firstName : ''}\n          name=\"firstName\" id=\"filterFirst-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterFirst-name\">First Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.lastName ? values.lastName : ''}\n          name=\"lastName\" id=\"filterLast-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterLast-name\">Last Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.email ? values.email : ''}\n          name=\"email\" id=\"filterEmail\" type=\"email\" className=\"validate\" />\n        <label htmlFor=\"filterEmail\">Email</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.phone ? values.phone : ''}\n          name=\"phone\" id=\"filterPhone\" type=\"tel\" className=\"validate\" />\n        <label htmlFor=\"filterPhone\">Phone</label>\n      </div>\n      <button type=\"submit\" className={styles.submitButton}>Find</button>\n      {\n        data.length >= 50 ? <></> :\n        <button type=\"reset\" className={styles.resetButton}>Show table</button>\n      }\n    </form>\n  );\n}\n\nexport default FilterForm;\n","import React, { useState } from 'react';\n\nimport Table from \"../Table/Table\";\nimport api from '../../utils/Api';\nimport Preloader from \"../Preloader/Preloader\";\nimport FormAddUser from \"../FormAddUser/FormAddUser\";\nimport FilterForm from \"../FilterForm/FilterForm\";\nimport { TABLE_INFO } from \"../../utils/constants\";\nimport M from 'materialize-css'\nimport tableDragger from \"table-dragger\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [usersToRender, setUsersToRender] = useState([]);\n  const [isPreloaderVisible, setIsPreloaderVisible] = useState(false);\n  const [isTableLoading, setIsTableLoading] = useState(false);\n  const [isFormAddUserVisible, setIsFormAddUserVisible] = useState(false);\n  const [columnsRender, setColumnsRender] = useState(TABLE_INFO);\n\n  // Запуск скрипта формы выбора колонок\n  const dropdownBtn = document.querySelectorAll('.dropdown-trigger');\n  M.Dropdown.init(dropdownBtn, {\n    closeOnClick: false,\n    constrainWidth: false,\n  });\n\n  const tooltips = document.querySelectorAll('.tooltipped');\n  M.Tooltip.init(tooltips);\n\n  const resetBeforeFetch = () => {\n    setUsers([])\n    setUsersToRender([])\n    setIsPreloaderVisible(true)\n  }\n\n  const handleGetData = () => {\n    resetBeforeFetch()\n\n    api.getData()\n      .then(res => {\n        setUsers(res)\n        setUsersToRender(res.slice(0, 50))\n      })\n      .then(() => {\n        const draggableTable = document.querySelector('.table_type_scroll')\n\n        const dragger = tableDragger(draggableTable, {\n          animation: 1\n        })\n        dragger\n          .on('drag', () => {\n            if (window.getSelection) {\n              window.getSelection().removeAllRanges();\n            } else { // старый IE\n              document.selection.empty();\n            }\n          })\n      })\n      .finally(() => setIsPreloaderVisible(false))\n      .catch((err) => M.toast({html: err.message}))\n  }\n\n  const handleAddUser = (formData) => {\n    setUsers([formData, ...users])\n    setUsersToRender([formData, ...users])\n    M.toast({ html: 'User added!' })\n  }\n\n  const openFormAddUser = () => {\n    if (isFormAddUserVisible) {\n      setIsFormAddUserVisible(false)\n    } else {\n      setIsFormAddUserVisible(true)\n    }\n  }\n\n  // const handleRowClick = ({ evt, user }) => {\n  //   if (!isUserInfoOpen) {\n  //     setIsUserInfoOpen(true)\n  //   }\n  //\n  //   console.log(evt.target.closest('.table__row'))\n  //\n  //   setUserInfo(user)\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Test task for Аэро-Трейд</h1>\n        {/*<h2>{ columnsRender.Email.toString() }</h2>*/}\n        <div className=\"row\">\n          <button\n            onClick={handleGetData}\n            className=\"col s6 waves-effect waves-light btn pink lighten-2\">Get data</button>\n          {/*<button*/}\n          {/*  onClick={handleGetMaxData}*/}\n          {/*  className=\"col s4 waves-effect waves-light btn purple lighten-2\">Get max data</button>*/}\n          <button\n            onClick={openFormAddUser}\n            className=\"col s6 waves-effect waves-light btn blue lighten-2\">\n            { isFormAddUserVisible ? 'Close form' : 'Add user' }\n          </button>\n        </div>\n        <FormAddUser isVisible={isFormAddUserVisible} onSubmit={handleAddUser} />\n\n        { isPreloaderVisible && <Preloader /> }\n        { users.length > 0  &&\n          <>\n            <FilterForm\n              setDataForRender={setUsersToRender}\n              data={users}\n            />\n\n            <Table\n              columnsRender={columnsRender}\n              setColumnsRender={setColumnsRender}\n              setUsersToRender={setUsersToRender}\n              usersToRender={usersToRender}\n              data={users}\n              isTableLoading={isTableLoading}\n              setIsTableLoading={setIsTableLoading}\n            />\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}