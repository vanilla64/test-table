{"version":3,"sources":["components/TableRow/TableRow.js","components/SelectColumnForm/SelectColumnForm.js","components/Table/Table.js","utils/constants.js","images/s13-pic.jpg","images/car-pic.jpg","images/s15.jpg","images/r34.gif","images/180sx.jpg","utils/Api.js","components/Preloader/Preloader.js","components/UserInfo/UserInfo.js","components/FormAddUser/FormAddUser.js","components/FilterForm/FilterForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TableRow","props","user","index","type","columnsRender","id","firstName","lastName","email","phone","gender","ipAddress","dollars","carModel","carYear","carVin","classnames","tableRow","className","rowType","visible","price","carImage","src","Math","floor","random","alt","renderRow","SelectColumnForm","setValues","tableHeaders","setColumnsRender","useState","optionsValues","setOptionsValues","onSubmit","evt","preventDefault","onChange","target","name","checked","prev","data-target","map","headerItem","defaultChecked","title","Table","usersToRender","setUsersToRender","handleRowClick","isIncrease","setIsIncrease","values","Object","keys","onClick","dataSort","item","reverse","sort","a","b","Array","from","document","querySelectorAll","TABLE_INFO","api","url","_initialRequest","res","ok","json","Promise","reject","status","getMinData","fetch","_url","method","headers","then","getMaxData","getData","this","Preloader","UserInfo","address","description","city","state","streetAddress","zip","onClose","value","readOnly","FormAddUser","activeLabel","setActiveLabel","isValid","handleChange","isVisible","onReset","required","htmlFor","onFocus","onBlur","length","mask","radix","unmask","onAccept","disabled","FilterForm","data","setDataForRender","styles","submitButton","resetButton","inputId","filteredKeys","forEach","key","keysForSearch","filteredData","filter","toString","toLowerCase","includes","i","push","M","toast","html","reduceData","reduce","result","slice","App","users","setUsers","userInfo","setUserInfo","isPreloaderVisible","setIsPreloaderVisible","isUserInfoOpen","setIsUserInfoOpen","isFormAddUserVisible","setIsFormAddUserVisible","dropdownBtn","Dropdown","init","closeOnClick","constrainWidth","finally","catch","err","message","formData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e23f3e9.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TableRow(props) {\n  const { user, index, type, columnsRender } = props\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    phone,\n    gender,\n    ipAddress,\n    dollars,\n    carModel,\n    carYear,\n    carVin,\n    // img\n  } = user;\n\n  const handleClick = () => {\n    props.handleRowClick(user)\n  }\n\n  const classnames = {\n    tableRow: index % 2 === 0\n      ? 'table__row table__row_type_odd'\n      : 'table__row table__row_type_even',\n  }\n\n  const renderRow = (rowType) => {\n    let row\n\n    switch (rowType) {\n      case 'fixed':\n        return row =\n          <>\n            <td>{ index + 1 }</td>\n            <td>{ id }</td>\n            <td>{ firstName }</td>\n            <td>{ lastName }</td>\n          </>\n\n      case 'scroll':\n        return row =\n          <>\n            { columnsRender.email.visible && <td className=\"table__cell_type_email\">{email}</td> }\n            { columnsRender.phone.visible && <td className=\"table__cell_type_phone\">{ phone }</td> }\n            { columnsRender.gender.visible && <td className=\"table__cell_type_gender\">{ gender }</td> }\n            { columnsRender.ipAddress.visible && <td className=\"table__cell_type_ip\">{ ipAddress }</td> }\n            { columnsRender.price.visible && <td className=\"table__cell_type_price\">{ dollars }</td> }\n            {\n              columnsRender.carImage.visible &&\n              <td className=\"table__cell_type_img\">\n                <img\n                  className=\"table__img\"\n                  src={columnsRender.carImage.src[Math.floor(Math.random() * 5)]} alt=\"Car\"\n                />\n              </td>\n            }\n            { columnsRender.carModel.visible && <td>{ carModel }</td> }\n            { columnsRender.carYear.visible && <td>{ carYear }</td> }\n            { columnsRender.carVin.visible && <td>{ carVin }</td> }\n          </>\n    }\n  }\n\n  return (\n    <tr className={ classnames.tableRow }>\n      { renderRow(type) }\n    </tr>\n  );\n}\n\nexport default TableRow;","import React, { useState, useEffect } from 'react';\nimport './SelectColumnForm.css'\n\nfunction SelectColumnForm(props) {\n  const { setValues, tableHeaders, columnsRender, setColumnsRender } = props\n  const [optionsValues, setOptionsValues] = useState(columnsRender);\n\n  // useEffect(() => {\n  //   setColumnsRender(optionsValues)\n  // }, [optionsValues])\n\n  const handleDropdownChange = (evt) => {\n    const { name, checked } = evt.target;\n\n    setOptionsValues((prev) => {\n      return { ...prev, ...prev[name].visible = checked }\n    })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    setColumnsRender(optionsValues)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} onChange={handleDropdownChange} className=\"row\">\n      <button\n        className='dropdown-trigger col s4 btn deep-purple lighten-2'\n        data-target='dropdown1'>\n        Select columns\n      </button>\n      <button\n        type=\"submit\"\n        className=\"col s4 btn green lighten-2\">\n        Submit\n      </button>\n      <ul id='dropdown1' className='dropdown-content'>\n        {\n          tableHeaders.map((headerItem, index) => {\n\n            // console.log(headerItem.textContent.split(' ').join().replace(',', ''))\n            // if(index > 3) {\n              // const inputName = headerItem.textContent.split(' ').join().replace(',', '')\n              return (\n                <li key={index} className=\"dropdown-content__list-item\">\n                  <label>\n                    <input type=\"checkbox\" name={tableHeaders[index]} className=\"filled-in\" defaultChecked={true} />\n                    <span className=\"dropdown-content__text\">{ columnsRender[headerItem].title }</span>\n                  </label>\n                </li>\n              )\n            // }\n          })\n        }\n      </ul>\n    </form>\n  );\n}\n\nexport default SelectColumnForm;\n","import React, { useState } from 'react';\nimport './Table.css'\nimport TableRow from \"../TableRow/TableRow\";\nimport SelectColumnForm from \"../SelectColumnForm/SelectColumnForm\";\n\nfunction Table(props) {\n  const { usersToRender, setUsersToRender, handleRowClick, columnsRender, setColumnsRender } = props\n  const [isIncrease, setIsIncrease] = useState(false);\n  const [values, setValues] = useState({});\n\n  const tableHeaders = Object.keys(columnsRender)\n\n  const handleMoveRight = (evt) => {\n    let tabHed = Array.from(document.querySelectorAll('.table_type_scroll th'))\n\n\n  }\n\n  const handleSortId = () => {\n    let dataSort\n\n    if (isIncrease) {\n      dataSort = usersToRender.map(item => { return item }).reverse()\n      setUsersToRender(dataSort)\n      setIsIncrease(false)\n      return;\n    }\n\n    dataSort =\n      usersToRender.sort((a, b) => {\n        if (a.id > b.id) { return 1 }\n        if (a.id < b.id) { return -1 }\n        return 0\n      }).map(item => { return item })\n\n    setUsersToRender(dataSort)\n\n    setIsIncrease(true)\n  }\n\n  return (\n    <>\n      <SelectColumnForm\n        setValues={setValues}\n        columnsRender={columnsRender}\n        setColumnsRender={setColumnsRender}\n        tableHeaders={tableHeaders}\n        values={values}\n      />\n      <div className=\"row table-container\">\n        <table className=\"striped table_type_fixed\">\n          <thead className=\"table__header\">\n          <tr>\n            <th>№</th>\n            <th onClick={handleSortId} className=\"table__cell_type_id\">\n              ID <i className=\"material-icons table__icon\">{ isIncrease ? \"arrow_drop_up\" : \"arrow_drop_down\" }</i>\n            </th>\n            <th>First Name</th>\n            <th>Last Name</th>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            usersToRender.map((user, index) => (\n                <TableRow\n                  key={index}\n                  type={'fixed'}\n                  user={user}\n                  index={index}\n                  handleRowClick={handleRowClick}\n                />\n              )\n            )\n          }\n          </tbody>\n        </table>\n\n        <table className=\"striped table_type_scroll\">\n          <thead className=\"table__header\">\n            <tr>\n              { columnsRender.email.visible &&\n              <th>\n                <i className=\"material-icons table__icon\">keyboard_arrow_left</i>\n                { columnsRender.email.title }\n                <i onClick={handleMoveRight} className=\"material-icons table__icon\">keyboard_arrow_right</i>\n              </th>\n              }\n              { columnsRender.phone.visible && <th>{ columnsRender.phone.title }</th> }\n              { columnsRender.gender.visible && <th>{ columnsRender.gender.title }</th> }\n              { columnsRender.ipAddress.visible && <th>{ columnsRender.ipAddress.title }</th> }\n              { columnsRender.price.visible && <th>{ columnsRender.price.title }</th> }\n              { columnsRender.carImage.visible && <th>{ columnsRender.carImage.title }</th> }\n              { columnsRender.carModel.visible && <th>{ columnsRender.carModel.title }</th> }\n              { columnsRender.carYear.visible && <th>{ columnsRender.carYear.title }</th> }\n              { columnsRender.carVin.visible && <th>{ columnsRender.carVin.title }</th> }\n            </tr>\n          </thead>\n\n          <tbody>\n          {\n            usersToRender.map((user, index) => (\n                <TableRow\n                  key={index}\n                  type={'scroll'}\n                  columnsRender={columnsRender}\n                  user={user}\n                  index={index}\n                  handleRowClick={handleRowClick}\n                />\n              )\n            )\n          }\n          </tbody>\n        </table>\n      </div>\n\n\n\n\n\n\n\n\n      {/*{ data.length > 49 &&*/}\n      {/*<Pagination*/}\n      {/*  data={data}*/}\n      {/*  setUsersToRender={setUsersToRender}*/}\n      {/*  pageSize={50}*/}\n      {/*  portionSize={5} />*/}\n      {/*}*/}\n      {/*<table className=\"container table striped z-depth-4\">*/}\n      {/*  <thead className=\"table__header\">*/}\n      {/*    <tr>*/}\n      {/*      <th className=\"table__headercell table__headercell_pos_first\">№</th>*/}\n      {/*      <th*/}\n      {/*        onClick={handleSortId}*/}\n      {/*        className=\"center-align table__cell_type_id table__headercell table__headercell_pos_second\"*/}\n      {/*      >ID <i className=\"material-icons\">{ isIncrease ? \"arrow_drop_up\" : \"arrow_drop_down\" }</i>*/}\n      {/*      </th>*/}\n      {/*      <th>First Name</th>*/}\n      {/*      <th>Last Name</th>*/}\n      {/*      <th>Email</th>*/}\n      {/*      <th>Phone</th>*/}\n      {/*      <th>Gender</th>*/}\n      {/*      <th>IP Address</th>*/}\n      {/*      <th>Money</th>*/}\n      {/*      <th>Car Model</th>*/}\n      {/*      <th>Car Year</th>*/}\n      {/*      <th>Car VIN</th>*/}\n      {/*      /!**!/*/}\n      {/*      <th>First Name</th>*/}\n      {/*      <th>Last Name</th>*/}\n      {/*      <th>Email</th>*/}\n      {/*      <th>Phone</th>*/}\n      {/*      <th>Gender</th>*/}\n      {/*      <th>IP Address</th>*/}\n      {/*      <th>Money</th>*/}\n      {/*      <th>Car Model</th>*/}\n      {/*      <th>Car Year</th>*/}\n      {/*      <th>Car VIN</th>*/}\n      {/*    </tr>*/}\n      {/*  </thead>*/}\n\n        {/*<tbody>*/}\n        {/*{*/}\n        {/*  usersToRender.map((user, index) => (*/}\n        {/*      <TableRow*/}\n        {/*        key={index}*/}\n        {/*        user={user}*/}\n        {/*        index={index}*/}\n        {/*        handleRowClick={handleRowClick}*/}\n        {/*      />*/}\n        {/*    )*/}\n        {/*  )*/}\n        {/*}*/}\n        {/*</tbody>*/}\n      {/*</table>*/}\n    </>\n  );\n}\n\nexport default Table;\n","import s13 from '../images/s13-pic.jpg'\nimport s14 from '../images/car-pic.jpg'\nimport s15 from '../images/s15.jpg'\nimport r34 from '../images/r34.gif'\nimport sx180 from '../images/180sx.jpg'\n\nexport const MIN_DATA_FETCH = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\nexport const MAX_DATA_FETCH = 'http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D'\nexport const DATA_FETCH = 'https://my.api.mockaroo.com/test.json?key=94d3b3a0'\n\nconst cars = [s13, s14, s15, r34, sx180]\n\nexport const TABLE_INFO =\n  {\n    email: {\n      visible: true,\n      title: 'Email'\n    },\n    phone: {\n      visible: true,\n      title: 'Phone'\n    },\n    gender: {\n      visible: true,\n      title: 'Gender'\n    },\n    ipAddress: {\n      visible: true,\n      title: 'IP Address'\n    },\n    price: {\n      visible: true,\n      title: 'Price'\n    },\n    carImage: {\n      visible: true,\n      title: 'Car Image',\n      src: cars\n    },\n    carModel: {\n      visible: true,\n      title: 'Car Model'\n    },\n    carYear: {\n      visible: true,\n      title: 'Car Year'\n    },\n    carVin: {\n      visible: true,\n      title: 'Car VIN'\n    }\n  }\n","export default __webpack_public_path__ + \"static/media/s13-pic.6c852926.jpg\";","export default __webpack_public_path__ + \"static/media/car-pic.d18fd59d.jpg\";","export default __webpack_public_path__ + \"static/media/s15.4e26aa40.jpg\";","export default __webpack_public_path__ + \"static/media/r34.29eff04f.gif\";","export default __webpack_public_path__ + \"static/media/180sx.6972186e.jpg\";","import { DATA_FETCH } from './constants';\n\nclass Api {\n  constructor(url) {\n    this._url = url\n  }\n\n  _initialRequest = (res) => {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getMinData = () => {\n    return fetch(this._url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": '*'\n      }\n    })\n      .then(res => this._initialRequest(res))\n  }\n\n  getMaxData = () => {\n    return fetch(this._url, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n\n  getData = () => {\n    return fetch(this._url, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n}\n\nconst api = new Api(DATA_FETCH)\n\nexport default api;\n","import React from 'react';\n\nfunction Preloader() {\n  return (\n    <div className=\"preloader-wrapper active\">\n      <div className=\"spinner-layer spinner-red-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preloader;","import React from 'react';\nimport './UserInfo.css'\n\nfunction UserInfo(props) {\n  const { address, description, firstName, lastName } = props.user;\n  const { city, state, streetAddress, zip } = address;\n  const { onClose } = props\n\n  const handleCloseClick = () => {\n    onClose(false)\n  }\n\n  return (\n    <section className=\"user-info row z-depth-4\">\n      <div className=\"col s10\">\n        <h4>User info</h4>\n        <p>Выбран пользователь: <b>{ `${firstName} ${lastName}` }</b></p>\n        <div className=\"row\">\n          <p>Описание:</p>\n          <textarea className=\"col s8\" value={ description } readOnly />\n        </div>\n        <p>Адрес проживания: <b>{ streetAddress }</b></p>\n        <p>Город: <b>{ city }</b></p>\n        <p>Провинция/штат: <b>{ state }</b></p>\n        <p>Индекс: <b>{ zip }</b></p>\n      </div>\n      <button\n        onClick={handleCloseClick}\n        className=\"user-info__close-btn col s2 waves-effect waves-light btn blue lighten-2\">Close</button>\n    </section>\n\n  );\n}\n\nexport default UserInfo;\n","import React, { useState } from 'react';\nimport { IMaskInput } from 'react-imask';\n\nfunction FormAddUser(props) {\n  const [values, setValues] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: ''\n  });\n\n  const [activeLabel, setActiveLabel] = useState(false);\n\n  let isValid =\n    values.id === '' || values.firstName === '' ||\n    values.lastName === '' || values.email === '' || values.phone === ''\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n\n    setValues((prev) => {\n      return { ...prev, [name]: value }\n    })\n  }\n\n  const handleFocus = () => {\n    setActiveLabel(true)\n  }\n\n  const handleBlur = (evt) => {\n    const { value } = evt.target\n\n    if (value.length === 0) {\n      setActiveLabel(false)\n    }\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    props.onSubmit(values)\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  const handleReset = () => {\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  return (\n    props.isVisible &&\n    <section>\n      <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n        <h4>Add user</h4>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.id}\n            name=\"id\" id=\"id\" type=\"number\" className=\"validate\" required />\n          <label htmlFor=\"id\">Id</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.firstName}\n            name=\"firstName\" id=\"first-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"first-name\">First Name</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.lastName}\n            name=\"lastName\" id=\"last-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"last-name\">Last Name</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <input\n            onChange={handleChange}\n            value={values.email}\n            name=\"email\" id=\"email\" type=\"email\" className=\"validate\" required />\n          <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <IMaskInput\n            id=\"phone\"\n            // type=\"tel\"\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            mask={'(000)000-0000'}\n            radix=\".\"\n            value={values.phone}\n            unmask={false}\n            onAccept={(value) => {\n              setValues(prev => { return { ...prev, phone: value } })\n            }}\n          />\n          <label className={activeLabel ? 'active' : ''} htmlFor=\"phone\">Phone</label>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={isValid}\n          className=\"col s4 waves-effect waves-light btn green lighten-2\">Add</button>\n        <button\n          type=\"reset\"\n          className=\"col s4 waves-effect waves-light btn black-text transparent\">Reset</button>\n      </form>\n\n    </section>\n  );\n}\n\nexport default FormAddUser;\n","import React, { useState } from 'react';\nimport M from 'materialize-css';\n\nfunction FilterForm(props) {\n  const { data, setDataForRender } = props;\n  const [values, setValues] = useState({});\n\n  const styles = {\n    submitButton: data.length < 50\n      ? 'col s1 waves-effect waves-light btn green lighten-2'\n      : 'col s2 waves-effect waves-light btn green lighten-2',\n\n    resetButton: 'col s2 waves-effect waves-light btn black-text transparent',\n\n    inputId: data.length < 50\n      ? 'input-field col s1'\n      : 'input-field col s2'\n  }\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setValues((prev) => { return { ...prev, [name]: value } })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n\n    let filteredKeys = {}\n\n    const keys = Object.keys(values) // создаем массив ключей из стейта\n\n    keys.forEach(key => { // удаляем пустые свойства\n      if (values[key] !== '') {\n        filteredKeys[key] = values[key]\n      } else { return }\n    })\n\n    const keysForSearch = Object.keys(filteredKeys)\n\n    let filteredData = []\n\n    keysForSearch.forEach(key => {\n      let arr =\n        data.filter(\n          item => item[key].toString().toLowerCase().includes(values[key].toLowerCase())\n        )\n\n      arr.forEach(i => filteredData.push(i))\n    })\n\n    if (filteredData.length === 0) {\n      return M.toast({ html: 'User not found' })\n    } else {\n      const reduceData = filteredData.reduce((result, item) => {\n        return result.includes(item) ? result : [...result, item] // удаляем повторяющиеся объекты\n      }, [])\n\n      setDataForRender(reduceData)\n    }\n  }\n\n  const handleReset = () => {\n    setDataForRender(data.slice(0, 50))\n    setValues({})\n  }\n\n  return (\n    <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n      <h4>Filter</h4>\n      <div className={styles.inputId}>\n        <input\n          onChange={handleChange}\n          value={values.id ? values.id : ''}\n          name=\"id\" id=\"filterId\" type=\"number\" className=\"validate\" />\n        <label htmlFor=\"filterId\">Id</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.firstName ? values.firstName : ''}\n          name=\"firstName\" id=\"filterFirst-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterFirst-name\">First Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.lastName ? values.lastName : ''}\n          name=\"lastName\" id=\"filterLast-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterLast-name\">Last Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.email ? values.email : ''}\n          name=\"email\" id=\"filterEmail\" type=\"email\" className=\"validate\" />\n        <label htmlFor=\"filterEmail\">Email</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.phone ? values.phone : ''}\n          name=\"phone\" id=\"filterPhone\" type=\"tel\" className=\"validate\" />\n        <label htmlFor=\"filterPhone\">Phone</label>\n      </div>\n      <button type=\"submit\" className={styles.submitButton}>Find</button>\n      {\n        data.length >= 50 ? <></> :\n        <button type=\"reset\" className={styles.resetButton}>Show table</button>\n      }\n    </form>\n  );\n}\n\nexport default FilterForm;\n","import React, { useState } from 'react';\n\nimport Table from \"../Table/Table\";\nimport api from '../../utils/Api';\nimport Preloader from \"../Preloader/Preloader\";\nimport UserInfo from \"../UserInfo/UserInfo\";\nimport FormAddUser from \"../FormAddUser/FormAddUser\";\nimport FilterForm from \"../FilterForm/FilterForm\";\nimport { TABLE_INFO } from \"../../utils/constants\";\nimport M from 'materialize-css'\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [usersToRender, setUsersToRender] = useState([]);\n  const [userInfo, setUserInfo] = useState({});\n  const [isPreloaderVisible, setIsPreloaderVisible] = useState(false);\n  const [isUserInfoOpen, setIsUserInfoOpen] = useState(false);\n  const [isFormAddUserVisible, setIsFormAddUserVisible] = useState(false);\n  const [columnsRender, setColumnsRender] = useState(TABLE_INFO);\n\n  // Запуск скрипта формы выбора колонок\n  const dropdownBtn = document.querySelectorAll('.dropdown-trigger');\n  M.Dropdown.init(dropdownBtn, {\n    closeOnClick: false,\n    constrainWidth: false,\n  });\n\n  const resetBeforeFetch = () => {\n    setUsers([])\n    setUsersToRender([])\n    setIsUserInfoOpen(false)\n    setIsPreloaderVisible(true)\n  }\n\n  const handleGetData = () => {\n    resetBeforeFetch()\n\n    api.getData()\n      .then(res => {\n        setUsers(res)\n        setUsersToRender(res.slice(0, 50))\n      })\n      .then(() => {\n        // const tableHeaders = Array.from(document.querySelectorAll('.table__header tr th'))\n        // const inputNames = tableHeaders.map(item => {\n        //   return item.textContent.split(' ').join().replace(',', '')\n        // })\n        //\n        // let inputValues = {}\n        //\n        // inputNames.forEach((item, index) => {\n        //   if(index> 3) {\n        //     inputValues[item] = true\n        //   }\n        // })\n        //\n        // setColumnsRender(inputValues)\n      })\n      .finally(() => setIsPreloaderVisible(false))\n      .catch((err) => M.toast({html: err.message}))\n  }\n\n  // const handleGetMinData = () => {\n  //   resetBeforeFetch()\n  //\n  //   api.getMinData()\n  //     .then(res => {\n  //       setUsers(res)\n  //       setUsersToRender(res.slice(0, 50))\n  //     })\n  //     .finally(() => setIsPreloaderVisible(false))\n  //     .catch((err) => M.toast({html: err.message}))\n  // }\n\n  // const handleGetMaxData = () => {\n  //   resetBeforeFetch()\n  //\n  //   api.getMaxData()\n  //     .then(res => {\n  //       setUsers(res)\n  //       setUsersToRender(res.slice(0, 50))\n  //     })\n  //     .finally(() => setIsPreloaderVisible(false))\n  //     .catch((err) => M.toast({html: err.message}))\n  // }\n\n  const handleAddUser = (formData) => {\n    setUsers([formData, ...users])\n    setUsersToRender([formData, ...users])\n    M.toast({ html: 'User added!' })\n  }\n\n  const openFormAddUser = () => {\n    if (isFormAddUserVisible) {\n      setIsFormAddUserVisible(false)\n    } else {\n      setIsFormAddUserVisible(true)\n    }\n  }\n\n  const handleRowClick = (user) => {\n    if (!isUserInfoOpen) {\n      setIsUserInfoOpen(true)\n    }\n\n    setUserInfo(user)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Test task for Аэро-Трейд</h1>\n        {/*<h2>{ columnsRender.Email.toString() }</h2>*/}\n        <div className=\"row\">\n          <button\n            onClick={handleGetData}\n            className=\"col s6 waves-effect waves-light btn pink lighten-2\">Get data</button>\n          {/*<button*/}\n          {/*  onClick={handleGetMaxData}*/}\n          {/*  className=\"col s4 waves-effect waves-light btn purple lighten-2\">Get max data</button>*/}\n          <button\n            onClick={openFormAddUser}\n            className=\"col s6 waves-effect waves-light btn blue lighten-2\">\n            { isFormAddUserVisible ? 'Close form' : 'Add user' }\n          </button>\n        </div>\n        <FormAddUser isVisible={isFormAddUserVisible} onSubmit={handleAddUser} />\n        { isPreloaderVisible && <Preloader /> }\n        { users.length > 0  &&\n          <>\n            <FilterForm\n              setDataForRender={setUsersToRender}\n              data={users}\n            />\n\n            <Table\n              columnsRender={columnsRender}\n              setColumnsRender={setColumnsRender}\n              setUsersToRender={setUsersToRender}\n              handleRowClick={handleRowClick}\n              usersToRender={usersToRender}\n              data={users}\n            />\n\n            { isUserInfoOpen && <UserInfo onClose={setIsUserInfoOpen} user={userInfo}/> }\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}