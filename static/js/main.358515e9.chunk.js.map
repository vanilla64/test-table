{"version":3,"sources":["images/s13-pic.jpg","images/car-pic.jpg","images/s15.jpg","images/r34.gif","images/180sx.jpg","utils/constants.js","components/TableRow/TableRow.js","components/SelectColumnForm/SelectColumnForm.js","components/Preloader/Preloader.js","components/Table/Table.js","utils/Api.js","components/FormAddUser/FormAddUser.js","components/FilterForm/FilterForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TABLE_INFO","email","visible","title","phone","gender","ipAddress","dollars","euro","jpy","carImage","src","s13","s14","s15","r34","sx180","carModel","carYear","carVin","TableRow","props","user","index","type","columnsRender","id","firstName","lastName","classnames","tableRow","className","rowType","Math","floor","random","alt","renderRow","SelectColumnForm","tableHeaders","setColumnsRender","useState","optionsValues","setOptionsValues","onSubmit","evt","preventDefault","onChange","target","name","checked","prev","data-target","map","headerItem","defaultChecked","Preloader","Table","data","usersToRender","setUsersToRender","isTableLoading","setIsTableLoading","isTableScrollActive","isIncrease","setIsIncrease","Object","keys","selectKeysFromArr","arr","keyName","i","computeTotalPrice","sum","forEach","number","parseFloat","replace","charAt","reduceGender","genderCount","male","female","toLowerCase","onScroll","tableContainer","table","querySelector","length","scrollTop","offsetHeight","dataSlice","slice","dataToRender","concat","setTimeout","onClick","dataSort","item","reverse","sort","a","b","data-position","data-tooltip","toFixed","array","computeAverage","api","url","_initialRequest","res","ok","json","Promise","reject","status","getData","fetch","_url","method","then","this","FormAddUser","values","setValues","activeLabel","setActiveLabel","isValid","handleChange","value","isVisible","onReset","required","htmlFor","onFocus","onBlur","mask","radix","unmask","onAccept","disabled","FilterForm","setDataForRender","setIsTableScrollActive","styles","filteredKeys","key","keysForSearch","filteredData","filter","toString","includes","push","M","toast","html","reduceData","reduce","result","App","users","setUsers","isPreloaderVisible","setIsPreloaderVisible","isFormAddUserVisible","setIsFormAddUserVisible","dropdownBtn","document","querySelectorAll","Dropdown","init","closeOnClick","constrainWidth","tooltips","Tooltip","draggableTable","tableDragger","animation","on","window","getSelection","removeAllRanges","selection","empty","finally","catch","err","message","formData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.358515e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/s13-pic.6c852926.jpg\";","export default __webpack_public_path__ + \"static/media/car-pic.d18fd59d.jpg\";","export default __webpack_public_path__ + \"static/media/s15.4e26aa40.jpg\";","export default __webpack_public_path__ + \"static/media/r34.29eff04f.gif\";","export default __webpack_public_path__ + \"static/media/180sx.6972186e.jpg\";","import s13 from '../images/s13-pic.jpg'\nimport s14 from '../images/car-pic.jpg'\nimport s15 from '../images/s15.jpg'\nimport r34 from '../images/r34.gif'\nimport sx180 from '../images/180sx.jpg'\n\nexport const DATA_FETCH = 'https://my.api.mockaroo.com/test.json?key=94d3b3a0'\n\nconst cars = [s13, s14, s15, r34, sx180]\n\nexport const SLICE_COUNT = 100\n\nexport const TABLE_INFO =\n  {\n    email: {\n      visible: true,\n      title: 'Email'\n    },\n    phone: {\n      visible: true,\n      title: 'Phone'\n    },\n    gender: {\n      visible: true,\n      title: 'Gender'\n    },\n    ipAddress: {\n      visible: true,\n      title: 'IP Address'\n    },\n    dollars: {\n      visible: true,\n      title: 'Dollars'\n    },\n    euro: {\n      visible: true,\n      title: 'Euro'\n    },\n    jpy: {\n      visible: true,\n      title: 'JPY'\n    },\n    carImage: {\n      visible: true,\n      title: 'Car Image',\n      src: cars\n    },\n    carModel: {\n      visible: true,\n      title: 'Car Model'\n    },\n    carYear: {\n      visible: true,\n      title: 'Car Year'\n    },\n    carVin: {\n      visible: true,\n      title: 'Car VIN'\n    }\n  }\n","import React from 'react';\n\nfunction TableRow(props) {\n  const { user, index, type, columnsRender } = props\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    phone,\n    gender,\n    ipAddress,\n    dollars,\n    euro,\n    jpy,\n    carModel,\n    carYear,\n    carVin,\n  } = user;\n\n  const classnames = {\n    tableRow: index % 2 === 0\n      ? 'table__row table__row_type_odd'\n      : 'table__row table__row_type_even',\n  }\n\n  const renderRow = (rowType) => {\n    let row\n\n    switch (rowType) {\n      case 'fixed':\n        return row =\n          <>\n            <td>{ index + 1 }</td>\n            <td>{ id }</td>\n            <td>{ firstName }</td>\n            <td>{ lastName }</td>\n          </>\n\n      case 'scroll':\n        return row =\n          <>\n            { columnsRender.email.visible && <td className=\"table__cell_type_email\">{email}</td> }\n            { columnsRender.phone.visible && <td className=\"table__cell_type_phone\">{ phone }</td> }\n            { columnsRender.gender.visible && <td className=\"table__cell_type_gender\">{ gender }</td> }\n            { columnsRender.ipAddress.visible && <td className=\"table__cell_type_ip\">{ ipAddress }</td> }\n            { columnsRender.dollars.visible && <td className=\"table__cell_type_price\">{ dollars }</td> }\n            { columnsRender.euro.visible && <td className=\"table__cell_type_price\">{ euro }</td> }\n            { columnsRender.jpy.visible && <td className=\"table__cell_type_price\">{ jpy }</td> }\n            {\n              columnsRender.carImage.visible &&\n              <td className=\"table__cell_type_img\">\n                <img\n                  className=\"table__img\"\n                  src={columnsRender.carImage.src[Math.floor(Math.random() * 5)]} alt=\"Car\"\n                />\n              </td>\n            }\n            { columnsRender.carModel.visible && <td>{ carModel }</td> }\n            { columnsRender.carYear.visible && <td>{ carYear }</td> }\n            { columnsRender.carVin.visible && <td>{ carVin }</td> }\n          </>\n    }\n  }\n\n  return (\n    <tr className={ classnames.tableRow }>\n      { renderRow(type) }\n    </tr>\n  );\n}\n\nexport default TableRow;\n","import React, { useState } from 'react';\nimport './SelectColumnForm.css'\n\nfunction SelectColumnForm(props) {\n  const { tableHeaders, columnsRender, setColumnsRender } = props\n  const [optionsValues, setOptionsValues] = useState(columnsRender);\n\n  const handleDropdownChange = (evt) => {\n    const { name, checked } = evt.target;\n\n    setOptionsValues((prev) => {\n      return { ...prev, ...prev[name].visible = checked }\n    })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    setColumnsRender(optionsValues)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} onChange={handleDropdownChange} className=\"row\">\n      <button\n        className='dropdown-trigger col s4 btn deep-purple lighten-2'\n        data-target='dropdown1'>\n        Select columns\n      </button>\n      <button\n        type=\"submit\"\n        className=\"col s4 btn green lighten-2\">\n        Submit\n      </button>\n      <ul id='dropdown1' className='dropdown-content'>\n        {\n          tableHeaders.map((headerItem, index) => {\n            return (\n              <li key={index} className=\"dropdown-content__list-item\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name={tableHeaders[index]}\n                    className=\"filled-in\"\n                    defaultChecked={columnsRender[headerItem].visible}\n                  />\n                  <span className=\"dropdown-content__text\">{ columnsRender[headerItem].title }</span>\n                </label>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </form>\n  );\n}\n\nexport default SelectColumnForm;\n","import React from 'react';\n\nfunction Preloader() {\n  return (\n    <div className=\"preloader-wrapper active\">\n      <div className=\"spinner-layer spinner-red-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preloader;","import React, { useState } from 'react';\nimport './Table.css'\nimport { SLICE_COUNT } from '../../utils/constants'\nimport TableRow from \"../TableRow/TableRow\";\nimport SelectColumnForm from \"../SelectColumnForm/SelectColumnForm\";\nimport Preloader from \"../Preloader/Preloader\";\n\nfunction Table(props) {\n  const\n    {\n      data, usersToRender, setUsersToRender, columnsRender,\n      setColumnsRender, isTableLoading, setIsTableLoading, isTableScrollActive\n    } = props\n\n  const [isIncrease, setIsIncrease] = useState(false);\n\n  const tableHeaders = Object.keys(columnsRender)\n\n  const selectKeysFromArr = (arr, keyName) => {\n    return arr.map(i => i[keyName])\n  }\n\n  const computeTotalPrice = (arr, keyName) => {\n    let sum = 0\n\n    selectKeysFromArr(arr, keyName)\n      .forEach(i => {\n        const number = parseFloat(i.replace(i.charAt(0), ''))\n        sum = sum + number\n      })\n\n    return sum\n  }\n\n  const computeAverage = (arr, keyName) => {\n    let sum = 0\n    let average\n\n    const array = selectKeysFromArr(arr, keyName)\n      .map(i => {\n        sum = sum + i\n        return i\n      })\n\n    average = sum / array.length\n    return average\n  }\n\n  const reduceGender = (arr, keyName) => {\n    const genderCount = {\n      male: 0,\n      female: 0\n    }\n\n    selectKeysFromArr(arr, keyName)\n      .forEach(i => {\n        switch (i.toLowerCase()) {\n          case 'male':\n            genderCount.male++\n            break\n          case 'female':\n            genderCount.female++\n            break\n        }\n      })\n\n    return genderCount\n  }\n\n  const handleScroll = (evt) => {\n    const tableContainer = evt.target\n    const table = evt.target.querySelector('table')\n\n    if(data.length <= usersToRender.length) {\n      return\n    }\n\n     if(!isTableLoading && tableContainer.scrollTop + tableContainer.offsetHeight >= table.offsetHeight) {\n       const dataSlice = data.slice(usersToRender.length, usersToRender.length + SLICE_COUNT)\n       const dataToRender = usersToRender.concat(dataSlice)\n\n       setIsTableLoading(true)\n\n       // setTimout имитирует подгрузку с сервера\n       setTimeout(() => {\n         setUsersToRender(dataToRender)\n         setIsTableLoading(false)\n       }, 1500)\n\n       return\n     }\n  }\n\n  const handleSortId = () => {\n    let dataSort\n\n    if (isIncrease) {\n      dataSort = usersToRender.map(item => { return item }).reverse()\n      setUsersToRender(dataSort)\n      setIsIncrease(false)\n      return;\n    }\n\n    dataSort =\n      usersToRender.sort((a, b) => {\n        if (a.id > b.id) { return 1 }\n        if (a.id < b.id) { return -1 }\n        return 0\n      }).map(item => { return item })\n\n    setUsersToRender(dataSort)\n\n    setIsIncrease(true)\n  }\n\n  return (\n    <>\n      <SelectColumnForm\n        columnsRender={columnsRender}\n        setColumnsRender={setColumnsRender}\n        tableHeaders={tableHeaders}\n      />\n      <div onScroll={isTableScrollActive ? handleScroll : null} className=\"row table-container\">\n        <table className=\"striped table_type_fixed\">\n          <thead className=\"table__header\">\n          <tr>\n            <th>№</th>\n            <th\n              onClick={handleSortId}\n              className=\"table__cell_type_id\"\n            >\n              ID <i className=\"material-icons table__icon\">{ isIncrease ? \"arrow_drop_up\" : \"arrow_drop_down\" }</i>\n            </th>\n            <th>First Name</th>\n            <th>Last Name</th>\n          </tr>\n          </thead>\n          <thead className=\"table__header\">\n          <tr>\n            <th>Total</th>\n            <th>{ selectKeysFromArr(usersToRender, 'id').length }</th>\n            <th>{ selectKeysFromArr(usersToRender, 'firstName').length }</th>\n            <th>{ selectKeysFromArr(usersToRender, 'lastName').length }</th>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            usersToRender.map((user, index) => (\n                <TableRow\n                  key={index}\n                  type={'fixed'}\n                  user={user}\n                  index={index}\n                />\n              )\n            )\n          }\n          </tbody>\n        </table>\n\n        <table className=\"striped table_type_scroll\">\n          <thead className=\"table__header\">\n            <tr>\n              { columnsRender.email.visible && <th>{ columnsRender.email.title }</th> }\n              { columnsRender.phone.visible && <th>{ columnsRender.phone.title }</th> }\n              {\n                columnsRender.gender.visible &&\n                <th\n                  className=\"tooltipped\"\n                  data-position=\"bottom\"\n                  data-tooltip={`\n                  Male: ${reduceGender(usersToRender, 'gender').male}\n                  Female: ${reduceGender(usersToRender, 'gender').female}\n                  `}\n                >\n                  { columnsRender.gender.title }\n                </th>\n              }\n              { columnsRender.ipAddress.visible && <th>{ columnsRender.ipAddress.title }</th> }\n              { columnsRender.dollars.visible && <th>{ columnsRender.dollars.title }</th> }\n              { columnsRender.euro.visible && <th>{ columnsRender.euro.title }</th> }\n              { columnsRender.jpy.visible && <th>{ columnsRender.jpy.title }</th> }\n              { columnsRender.carImage.visible && <th>{ columnsRender.carImage.title }</th> }\n              { columnsRender.carModel.visible && <th>{ columnsRender.carModel.title }</th> }\n              { columnsRender.carYear.visible && <th>{ columnsRender.carYear.title }</th> }\n              { columnsRender.carVin.visible && <th>{ columnsRender.carVin.title }</th> }\n            </tr>\n          </thead>\n          <thead className=\"table__header\">\n            <tr>\n              { columnsRender.email.visible && <th>{ selectKeysFromArr(usersToRender, 'email').length }</th> }\n              { columnsRender.phone.visible && <th>{ selectKeysFromArr(usersToRender, 'phone').length }</th> }\n              {\n                columnsRender.gender.visible &&\n                <th>\n                  { selectKeysFromArr(usersToRender, 'gender').length }\n                </th>\n              }\n              { columnsRender.ipAddress.visible && <th>{ selectKeysFromArr(usersToRender, 'ipAddress').length }</th> }\n              {\n                columnsRender.dollars.visible &&\n                <th>{ '$' + computeTotalPrice(usersToRender, 'dollars').toFixed(2) }</th>\n              }\n              {\n                columnsRender.euro.visible &&\n                <th>{ '€' + computeTotalPrice(usersToRender, 'euro').toFixed(2) }</th>\n              }\n              {\n                columnsRender.jpy.visible &&\n                <th>{ '¥' + computeTotalPrice(usersToRender, 'jpy').toFixed(2) }</th>\n              }\n              { columnsRender.carImage.visible && <th></th> }\n              { columnsRender.carModel.visible && <th>{ selectKeysFromArr(usersToRender, 'carModel').length }</th> }\n              { columnsRender.carYear.visible && <th>{ computeAverage(usersToRender, 'carYear').toFixed(0) }</th> }\n              { columnsRender.carVin.visible && <th>{ selectKeysFromArr(usersToRender, 'carVin').length }</th> }\n            </tr>\n          </thead>\n          <tbody>\n          {\n            usersToRender.map((user, index) => (\n                <TableRow\n                  key={index}\n                  type={'scroll'}\n                  columnsRender={columnsRender}\n                  user={user}\n                  index={index}\n                />\n              )\n            )\n          }\n          </tbody>\n        </table>\n        {\n          isTableLoading &&\n          <div className=\"table-container__preloader\">\n            <Preloader />\n          </div>\n        }\n      </div>\n      {\n        data.length <= usersToRender.length &&\n        <h5>No data anymore...</h5>\n      }\n    </>\n  );\n}\n\nexport default Table;\n","import { DATA_FETCH } from './constants';\n\nclass Api {\n  constructor(url) {\n    this._url = url\n  }\n\n  _initialRequest = (res) => {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getData = () => {\n    return fetch(this._url, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n}\n\nconst api = new Api(DATA_FETCH)\n\nexport default api;\n","import React, { useState } from 'react';\nimport { IMaskInput } from 'react-imask';\n\nfunction FormAddUser(props) {\n  const [values, setValues] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: ''\n  });\n\n  const [activeLabel, setActiveLabel] = useState(false);\n\n  let isValid =\n    values.id === '' || values.firstName === '' ||\n    values.lastName === '' || values.email === '' || values.phone === ''\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n\n    setValues((prev) => {\n      return { ...prev, [name]: value }\n    })\n  }\n\n  const handleFocus = () => {\n    setActiveLabel(true)\n  }\n\n  const handleBlur = (evt) => {\n    const { value } = evt.target\n\n    if (value.length === 0) {\n      setActiveLabel(false)\n    }\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    props.onSubmit(values)\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  const handleReset = () => {\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  return (\n    props.isVisible &&\n    <section>\n      <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n        <h4>Add user</h4>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.id}\n            name=\"id\" id=\"id\" type=\"number\" className=\"validate\" required />\n          <label htmlFor=\"id\">Id</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.firstName}\n            name=\"firstName\" id=\"first-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"first-name\">First Name</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.lastName}\n            name=\"lastName\" id=\"last-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"last-name\">Last Name</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <input\n            onChange={handleChange}\n            value={values.email}\n            name=\"email\" id=\"email\" type=\"email\" className=\"validate\" required />\n          <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <IMaskInput\n            id=\"phone\"\n            // type=\"tel\"\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            mask={'(000)000-0000'}\n            radix=\".\"\n            value={values.phone}\n            unmask={false}\n            onAccept={(value) => {\n              setValues(prev => { return { ...prev, phone: value } })\n            }}\n          />\n          <label className={activeLabel ? 'active' : ''} htmlFor=\"phone\">Phone</label>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={isValid}\n          className=\"col s4 waves-effect waves-light btn green lighten-2\">Add</button>\n        <button\n          type=\"reset\"\n          className=\"col s4 waves-effect waves-light btn black-text transparent\">Reset</button>\n      </form>\n\n    </section>\n  );\n}\n\nexport default FormAddUser;\n","import React, { useState } from 'react';\nimport M from 'materialize-css';\nimport { SLICE_COUNT } from '../../utils/constants'\n\nfunction FilterForm(props) {\n  const { data, setDataForRender, setIsTableScrollActive, usersToRender } = props;\n  const [values, setValues] = useState({});\n\n  const styles = {\n    submitButton: 'col s1 waves-effect waves-light btn green lighten-2',\n    resetButton: 'col s2 waves-effect waves-light btn black-text transparent',\n    inputId: 'input-field col s1',\n  }\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setValues((prev) => { return { ...prev, [name]: value } })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    setIsTableScrollActive(false)\n\n    let filteredKeys = {}\n\n    const keys = Object.keys(values) // создаем массив ключей из стейта\n\n    keys.forEach(key => { // удаляем пустые свойства\n      if (values[key] !== '') {\n        filteredKeys[key] = values[key]\n      } else { return }\n    })\n\n    const keysForSearch = Object.keys(filteredKeys)\n\n    let filteredData = []\n\n    keysForSearch.forEach(key => {\n      let arr =\n        usersToRender.filter(\n          item => item[key].toString().toLowerCase().includes(values[key].toLowerCase())\n        )\n\n      arr.forEach(i => filteredData.push(i))\n    })\n\n    if (filteredData.length === 0) {\n      return M.toast({ html: 'User not found' })\n    } else {\n      const reduceData = filteredData.reduce((result, item) => {\n        return result.includes(item) ? result : [...result, item] // удаляем повторяющиеся объекты\n      }, [])\n\n      setDataForRender(reduceData)\n    }\n  }\n\n  const handleReset = () => {\n    setIsTableScrollActive(true)\n    setDataForRender(data.slice(0, SLICE_COUNT))\n    setValues({})\n  }\n\n  return (\n    <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n      <h4>Filter</h4>\n      <div className={styles.inputId}>\n        <input\n          onChange={handleChange}\n          value={values.id ? values.id : ''}\n          name=\"id\" id=\"filterId\" type=\"number\" className=\"validate\" />\n        <label htmlFor=\"filterId\">Id</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.firstName ? values.firstName : ''}\n          name=\"firstName\" id=\"filterFirst-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterFirst-name\">First Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.lastName ? values.lastName : ''}\n          name=\"lastName\" id=\"filterLast-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterLast-name\">Last Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.email ? values.email : ''}\n          name=\"email\" id=\"filterEmail\" type=\"email\" className=\"validate\" />\n        <label htmlFor=\"filterEmail\">Email</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.phone ? values.phone : ''}\n          name=\"phone\" id=\"filterPhone\" type=\"tel\" className=\"validate\" />\n        <label htmlFor=\"filterPhone\">Phone</label>\n      </div>\n      <button type=\"submit\" className={styles.submitButton}>Find</button>\n      <button type=\"reset\" className={styles.resetButton}>Show table</button>\n    </form>\n  );\n}\n\nexport default FilterForm;\n","import React, { useState } from 'react';\n\nimport Table from \"../Table/Table\";\nimport api from '../../utils/Api';\nimport Preloader from \"../Preloader/Preloader\";\nimport FormAddUser from \"../FormAddUser/FormAddUser\";\nimport FilterForm from \"../FilterForm/FilterForm\";\nimport { TABLE_INFO, SLICE_COUNT } from \"../../utils/constants\";\nimport M from 'materialize-css'\nimport tableDragger from \"table-dragger\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [usersToRender, setUsersToRender] = useState([]);\n  const [isPreloaderVisible, setIsPreloaderVisible] = useState(false);\n  const [isTableLoading, setIsTableLoading] = useState(false);\n  const [isFormAddUserVisible, setIsFormAddUserVisible] = useState(false);\n  const [columnsRender, setColumnsRender] = useState(TABLE_INFO);\n  const [isTableScrollActive, setIsTableScrollActive] = useState(true);\n\n  // Запуск скрипта формы выбора колонок\n  const dropdownBtn = document.querySelectorAll('.dropdown-trigger');\n  M.Dropdown.init(dropdownBtn, {\n    closeOnClick: false,\n    constrainWidth: false,\n  });\n\n  // Запуск скрипта всплывающей подсказки\n  const tooltips = document.querySelectorAll('.tooltipped');\n  M.Tooltip.init(tooltips);\n\n  const resetBeforeFetch = () => {\n    setUsers([])\n    setUsersToRender([])\n    setIsPreloaderVisible(true)\n  }\n\n  const handleGetData = () => {\n    resetBeforeFetch()\n\n    api.getData()\n      .then(res => {\n        setUsers(res)\n        setUsersToRender(res.slice(0, SLICE_COUNT))\n      })\n      .then(() => {\n        const draggableTable = document.querySelector('.table_type_scroll')\n\n        const dragger = tableDragger(draggableTable, {\n          animation: 1\n        })\n        dragger\n          .on('drag', () => {\n            if (window.getSelection) {\n              window.getSelection().removeAllRanges();\n            } else { // старый IE\n              document.selection.empty();\n            }\n          })\n      })\n      .finally(() => setIsPreloaderVisible(false))\n      .catch((err) => M.toast({html: err.message}))\n  }\n\n  const handleAddUser = (formData) => {\n    formData.gender = 'test'\n    formData.ipAddress = 'test'\n    formData.dollars = '$0.00'\n    formData.euro = '€0.00'\n    formData.jpy = '¥0.00'\n    formData.carImage = ''\n    formData.carModel = 'test'\n    formData.carYear = 2000\n    formData.carVin = 'test'\n\n    setUsers([formData, ...users])\n    setUsersToRender([formData, ...users])\n\n    M.toast({ html: 'User added!' })\n  }\n\n  const openFormAddUser = () => {\n    if (isFormAddUserVisible) {\n      return setIsFormAddUserVisible(false)\n    }\n    setIsFormAddUserVisible(true)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Test task for Аэро-Трейд</h1>\n        <div className=\"row\">\n          <button\n            onClick={handleGetData}\n            className=\"col s6 waves-effect waves-light btn pink lighten-2\">Get data</button>\n          <button\n            onClick={openFormAddUser}\n            className=\"col s6 waves-effect waves-light btn blue lighten-2\">\n            { isFormAddUserVisible ? 'Close form' : 'Add user' }\n          </button>\n        </div>\n        <FormAddUser isVisible={isFormAddUserVisible} onSubmit={handleAddUser} />\n\n        { isPreloaderVisible && <Preloader /> }\n\n        { users.length > 0  &&\n          <>\n            <FilterForm\n              setDataForRender={setUsersToRender}\n              usersToRender={usersToRender}\n              data={users}\n              setIsTableScrollActive={setIsTableScrollActive}\n            />\n            <Table\n              columnsRender={columnsRender}\n              setColumnsRender={setColumnsRender}\n              setUsersToRender={setUsersToRender}\n              usersToRender={usersToRender}\n              data={users}\n              isTableLoading={isTableLoading}\n              setIsTableLoading={setIsTableLoading}\n              isTableScrollActive={isTableScrollActive}\n            />\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}