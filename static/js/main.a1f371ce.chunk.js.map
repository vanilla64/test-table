{"version":3,"sources":["components/TableRow/TableRow.js","components/Pagination/Pagination.js","components/Table/Table.js","utils/Api.js","utils/constants.js","components/Preloader/Preloader.js","components/UserInfo/UserInfo.js","components/FormAddUser/FormAddUser.js","components/FilterForm/FilterForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TableRow","props","user","index","id","firstName","lastName","email","phone","gender","ipAddress","dollars","carModel","carYear","carVin","className","onClick","handleRowClick","Pagination","data","pageSize","portionSize","setUsersToRender","useState","activeItem","setActiveItem","portionCount","setPortionCount","pageCount","Math","ceil","length","items","i","push","portionTotalCount","subItems","slice","handleItemClick","evt","numberOfItem","parseInt","target","closest","textContent","arrToRender","prev","href","map","item","Table","usersToRender","isIncrease","setIsIncrease","console","log","dataSort","reverse","sort","a","b","api","url","_initialRequest","res","ok","json","Promise","reject","status","getMinData","fetch","_url","method","headers","then","getMaxData","getData","this","Preloader","UserInfo","address","description","city","state","streetAddress","zip","onClose","value","readOnly","FormAddUser","values","setValues","activeLabel","setActiveLabel","isValid","handleChange","name","isVisible","onChange","onSubmit","preventDefault","onReset","type","required","htmlFor","onFocus","onBlur","mask","radix","unmask","onAccept","disabled","FilterForm","setDataForRender","styles","submitButton","resetButton","inputId","filteredKeys","Object","keys","forEach","key","keysForSearch","filteredData","filter","toString","toLowerCase","includes","M","toast","html","reduceData","reduce","result","App","users","setUsers","userInfo","setUserInfo","isPreloaderVisible","setIsPreloaderVisible","isUserInfoOpen","setIsUserInfoOpen","isFormAddUserVisible","setIsFormAddUserVisible","finally","catch","err","message","formData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1f371ce.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TableRow(props) {\n  const { user, index } = props\n  const {\n    id,\n    firstName,\n    lastName,\n    email,\n    phone,\n    gender,\n    ipAddress,\n    dollars,\n    carModel,\n    carYear,\n    carVin,\n    // img\n  } = user;\n\n  const handleClick = () => {\n    props.handleRowClick(user)\n  }\n\n  return (\n    <tr className=\"table-row\" onClick={handleClick}>\n      <td>{ index + 1 }</td>\n      <td className=\"center-align\" >{ id }</td>\n      <td>{ firstName }</td>\n      <td>{ lastName }</td>\n      <td>{ email }</td>\n      <td className=\"table__cell_type_phone\">{ phone }</td>\n      <td>{ gender }</td>\n      <td>{ ipAddress }</td>\n      <td>{ dollars }</td>\n      <td>{ carModel }</td>\n      <td>{ carYear }</td>\n      <td>{ carVin }</td>\n\n      <td>{ firstName }</td>\n      <td>{ lastName }</td>\n      <td>{ email }</td>\n      <td>{ phone }</td>\n      <td>{ gender }</td>\n      <td>{ ipAddress }</td>\n      <td>{ dollars }</td>\n      <td>{ carModel }</td>\n      <td>{ carYear }</td>\n      <td>{ carVin }</td>\n    </tr>\n  );\n}\n\nexport default TableRow;","import React, { useState } from 'react';\n\nfunction Pagination(props) {\n  const { data, pageSize, portionSize, setUsersToRender } = props;\n  const [activeItem, setActiveItem] = useState(1);\n  const [portionCount, setPortionCount] = useState(0);\n\n  const pageCount = Math.ceil(data.length / pageSize)\n\n  let items = []\n  for (let i = 1; i <= pageCount; i++) {\n    items.push(i)\n  }\n\n  let portionTotalCount = Math.ceil(pageCount / portionSize)\n\n  let subItems = []\n  for (let i = 0; i <Math.ceil(items.length / portionSize); i++){\n    subItems[i] = items.slice((i * portionSize), (i * portionSize) + portionSize);\n  }\n\n  const handleItemClick = (evt) => {\n    const numberOfItem = parseInt(evt.target.closest('a').textContent)\n    setActiveItem(numberOfItem)\n\n    // console.log(`a: ${pageSize * numberOfItem - pageSize} b: ${numberOfItem * pageSize}`)\n    const arrToRender = data.slice(pageSize * numberOfItem - pageSize, numberOfItem * pageSize)\n    setUsersToRender(arrToRender)\n  }\n\n  const increaseItem = () => {\n    if (portionCount === portionTotalCount - 1) { return }\n    setPortionCount(prev => prev + 1)\n  }\n\n  const decreaseItem = () => {\n    if (portionCount === 0) { return }\n    setPortionCount(prev => prev - 1)\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li onClick={decreaseItem} className={portionCount !== 0 ? 'waves-effect' : 'disabled'}>\n        <a href=\"#!\"><i className=\"material-icons\">chevron_left</i></a>\n      </li>\n\n      {\n        subItems[portionCount].map(item =>\n          <li key={item} onClick={handleItemClick} className={activeItem === item ? 'active' : 'waves-effect'}>\n            <a href=\"#!\">{ item }</a>\n          </li>)\n      }\n\n      <li onClick={increaseItem} className={portionCount !== portionTotalCount - 1 ? 'waves-effect' : 'disabled'}>\n        <a href=\"#!\"><i className=\"material-icons\">chevron_right</i></a>\n      </li>\n    </ul>\n  );\n}\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './Table.css'\nimport TableRow from \"../TableRow/TableRow\";\nimport Pagination from \"../Pagination/Pagination\";\n\nfunction Table(props) {\n  const { data, usersToRender, setUsersToRender, handleRowClick } = props\n  const [isIncrease, setIsIncrease] = useState(false);\n\n  console.log(data)\n\n  const handleSortId = () => {\n    let dataSort\n\n    if (isIncrease) {\n      dataSort = usersToRender.map(item => { return item }).reverse()\n      setUsersToRender(dataSort)\n      setIsIncrease(false)\n      return;\n    }\n\n    dataSort =\n      usersToRender.sort((a, b) => {\n        if (a.id > b.id) { return 1 }\n        if (a.id < b.id) { return -1 }\n        return 0\n      }).map(item => { return item })\n\n    setUsersToRender(dataSort)\n    setIsIncrease(true)\n\n  }\n\n  return (\n    <>\n      { data.length > 49 &&\n      <Pagination\n        data={data}\n        setUsersToRender={setUsersToRender}\n        pageSize={50}\n        portionSize={5} />\n      }\n      <table className=\"container table striped z-depth-4\">\n        <thead className=\"table__header\">\n        <tr>\n          <th>№</th>\n          <th onClick={handleSortId} className=\"center-align table__cell_type_id\" >\n            ID <i className=\"material-icons\">{ isIncrease ? \"arrow_drop_up\" : \"arrow_drop_down\" }</i>\n          </th>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Phone</th>\n          <th>Gender</th>\n          <th>IP Address</th>\n          <th>Money</th>\n          <th>Car Model</th>\n          <th>Car Year</th>\n          <th>Car VIN</th>\n          {/**/}\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Phone</th>\n          <th>Gender</th>\n          <th>IP Address</th>\n          <th>Money</th>\n          <th>Car Model</th>\n          <th>Car Year</th>\n          <th>Car VIN</th>\n        </tr>\n        </thead>\n\n        <tbody>\n        {\n          usersToRender.map((user, index) => (\n              <TableRow\n                key={index}\n                user={user}\n                index={index}\n                handleRowClick={handleRowClick}\n              />\n            )\n          )\n        }\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Table;\n","import { DATA_FETCH } from './constants';\n\nclass Api {\n  constructor(url) {\n    this._url = url\n  }\n\n  _initialRequest = (res) => {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getMinData = () => {\n    return fetch(this._url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": '*'\n      }\n    })\n      .then(res => this._initialRequest(res))\n  }\n\n  getMaxData = () => {\n    return fetch(this._url, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n\n  getData = () => {\n    return fetch(this._url, {method: 'GET'})\n      .then(res => this._initialRequest(res))\n  }\n}\n\nconst api = new Api(DATA_FETCH)\n\nexport default api;\n","export const MIN_DATA_FETCH = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\nexport const MAX_DATA_FETCH = 'http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D'\nexport const DATA_FETCH = 'https://my.api.mockaroo.com/test.json?key=94d3b3a0'","import React from 'react';\n\nfunction Preloader() {\n  return (\n    <div className=\"preloader-wrapper active\">\n      <div className=\"spinner-layer spinner-red-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Preloader;","import React from 'react';\nimport './UserInfo.css'\n\nfunction UserInfo(props) {\n  const { address, description, firstName, lastName } = props.user;\n  const { city, state, streetAddress, zip } = address;\n  const { onClose } = props\n\n  const handleCloseClick = () => {\n    onClose(false)\n  }\n\n  return (\n    <section className=\"user-info row z-depth-4\">\n      <div className=\"col s10\">\n        <h4>User info</h4>\n        <p>Выбран пользователь: <b>{ `${firstName} ${lastName}` }</b></p>\n        <div className=\"row\">\n          <p>Описание:</p>\n          <textarea className=\"col s8\" value={ description } readOnly />\n        </div>\n        <p>Адрес проживания: <b>{ streetAddress }</b></p>\n        <p>Город: <b>{ city }</b></p>\n        <p>Провинция/штат: <b>{ state }</b></p>\n        <p>Индекс: <b>{ zip }</b></p>\n      </div>\n      <button\n        onClick={handleCloseClick}\n        className=\"user-info__close-btn col s2 waves-effect waves-light btn blue lighten-2\">Close</button>\n    </section>\n\n  );\n}\n\nexport default UserInfo;\n","import React, { useState } from 'react';\nimport { IMaskInput } from 'react-imask';\n\nfunction FormAddUser(props) {\n  const [values, setValues] = useState({\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: ''\n  });\n\n  const [activeLabel, setActiveLabel] = useState(false);\n\n  let isValid =\n    values.id === '' || values.firstName === '' ||\n    values.lastName === '' || values.email === '' || values.phone === ''\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n\n    setValues((prev) => {\n      return { ...prev, [name]: value }\n    })\n  }\n\n  const handleFocus = () => {\n    setActiveLabel(true)\n  }\n\n  const handleBlur = (evt) => {\n    const { value } = evt.target\n\n    if (value.length === 0) {\n      setActiveLabel(false)\n    }\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    props.onSubmit(values)\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  const handleReset = () => {\n    setValues({\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: ''\n    })\n  }\n\n  return (\n    props.isVisible &&\n    <section>\n      <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n        <h4>Add user</h4>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.id}\n            name=\"id\" id=\"id\" type=\"number\" className=\"validate\" required />\n          <label htmlFor=\"id\">Id</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.firstName}\n            name=\"firstName\" id=\"first-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"first-name\">First Name</label>\n        </div>\n        <div className=\"input-field col s2\">\n          <input\n            onChange={handleChange}\n            value={values.lastName}\n            name=\"lastName\" id=\"last-name\" type=\"text\" className=\"validate\" required />\n          <label htmlFor=\"last-name\">Last Name</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <input\n            onChange={handleChange}\n            value={values.email}\n            name=\"email\" id=\"email\" type=\"email\" className=\"validate\" required />\n          <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"input-field col s3\">\n          <IMaskInput\n            id=\"phone\"\n            // type=\"tel\"\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            mask={'(000)000-0000'}\n            radix=\".\"\n            value={values.phone}\n            unmask={false}\n            onAccept={(value) => {\n              setValues(prev => { return { ...prev, phone: value } })\n            }}\n          />\n          <label className={activeLabel ? 'active' : ''} htmlFor=\"phone\">Phone</label>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={isValid}\n          className=\"col s4 waves-effect waves-light btn green lighten-2\">Add</button>\n        <button\n          type=\"reset\"\n          className=\"col s4 waves-effect waves-light btn black-text transparent\">Reset</button>\n      </form>\n\n    </section>\n  );\n}\n\nexport default FormAddUser;\n","import React, { useState } from 'react';\nimport M from 'materialize-css';\n\nfunction FilterForm(props) {\n  const { data, setDataForRender } = props;\n  const [values, setValues] = useState({});\n\n  const styles = {\n    submitButton: data.length < 50\n      ? 'col s1 waves-effect waves-light btn green lighten-2'\n      : 'col s2 waves-effect waves-light btn green lighten-2',\n\n    resetButton: 'col s2 waves-effect waves-light btn black-text transparent',\n\n    inputId: data.length < 50\n      ? 'input-field col s1'\n      : 'input-field col s2'\n  }\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setValues((prev) => { return { ...prev, [name]: value } })\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n\n    let filteredKeys = {}\n\n    const keys = Object.keys(values) // создаем массив ключей из стейта\n\n    keys.forEach(key => { // удаляем пустые свойства\n      if (values[key] !== '') {\n        filteredKeys[key] = values[key]\n      } else { return }\n    })\n\n    const keysForSearch = Object.keys(filteredKeys)\n\n    let filteredData = []\n\n    keysForSearch.forEach(key => {\n      let arr =\n        data.filter(\n          item => item[key].toString().toLowerCase().includes(values[key].toLowerCase())\n        )\n\n      arr.forEach(i => filteredData.push(i))\n    })\n\n    if (filteredData.length === 0) {\n      return M.toast({ html: 'User not found' })\n    } else {\n      const reduceData = filteredData.reduce((result, item) => {\n        return result.includes(item) ? result : [...result, item] // удаляем повторяющиеся объекты\n      }, [])\n\n      setDataForRender(reduceData)\n    }\n  }\n\n  const handleReset = () => {\n    setDataForRender(data.slice(0, 50))\n    setValues({})\n  }\n\n  return (\n    <form onChange={handleChange} onSubmit={handleSubmit} onReset={handleReset} className=\"row\">\n      <h4>Filter</h4>\n      <div className={styles.inputId}>\n        <input\n          onChange={handleChange}\n          value={values.id ? values.id : ''}\n          name=\"id\" id=\"filterId\" type=\"number\" className=\"validate\" />\n        <label htmlFor=\"filterId\">Id</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.firstName ? values.firstName : ''}\n          name=\"firstName\" id=\"filterFirst-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterFirst-name\">First Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.lastName ? values.lastName : ''}\n          name=\"lastName\" id=\"filterLast-name\" type=\"text\" className=\"validate\" />\n        <label htmlFor=\"filterLast-name\">Last Name</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.email ? values.email : ''}\n          name=\"email\" id=\"filterEmail\" type=\"email\" className=\"validate\" />\n        <label htmlFor=\"filterEmail\">Email</label>\n      </div>\n      <div className=\"input-field col s2\">\n        <input\n          onChange={handleChange}\n          value={values.phone ? values.phone : ''}\n          name=\"phone\" id=\"filterPhone\" type=\"tel\" className=\"validate\" />\n        <label htmlFor=\"filterPhone\">Phone</label>\n      </div>\n      <button type=\"submit\" className={styles.submitButton}>Find</button>\n      {\n        data.length >= 50 ? <></> :\n        <button type=\"reset\" className={styles.resetButton}>Show table</button>\n      }\n    </form>\n  );\n}\n\nexport default FilterForm;\n","import React, { useState } from 'react';\n\nimport Table from \"../Table/Table\";\nimport api from '../../utils/Api';\nimport Preloader from \"../Preloader/Preloader\";\nimport UserInfo from \"../UserInfo/UserInfo\";\nimport FormAddUser from \"../FormAddUser/FormAddUser\";\nimport FilterForm from \"../FilterForm/FilterForm\";\nimport M from 'materialize-css'\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [usersToRender, setUsersToRender] = useState([]);\n  const [userInfo, setUserInfo] = useState({});\n  const [isPreloaderVisible, setIsPreloaderVisible] = useState(false);\n  const [isUserInfoOpen, setIsUserInfoOpen] = useState(false);\n  const [isFormAddUserVisible, setIsFormAddUserVisible] = useState(false);\n\n  const resetBeforeFetch = () => {\n    setUsers([])\n    setUsersToRender([])\n    setIsUserInfoOpen(false)\n    setIsPreloaderVisible(true)\n  }\n\n  const handleGetData = () => {\n    resetBeforeFetch()\n\n    api.getData()\n      .then(res => {\n        setUsers(res)\n        setUsersToRender(res.slice(0, 50))\n      })\n      .finally(() => setIsPreloaderVisible(false))\n      .catch((err) => M.toast({html: err.message}))\n  }\n\n  // const handleGetMinData = () => {\n  //   resetBeforeFetch()\n  //\n  //   api.getMinData()\n  //     .then(res => {\n  //       setUsers(res)\n  //       setUsersToRender(res.slice(0, 50))\n  //     })\n  //     .finally(() => setIsPreloaderVisible(false))\n  //     .catch((err) => M.toast({html: err.message}))\n  // }\n\n  // const handleGetMaxData = () => {\n  //   resetBeforeFetch()\n  //\n  //   api.getMaxData()\n  //     .then(res => {\n  //       setUsers(res)\n  //       setUsersToRender(res.slice(0, 50))\n  //     })\n  //     .finally(() => setIsPreloaderVisible(false))\n  //     .catch((err) => M.toast({html: err.message}))\n  // }\n\n  const handleAddUser = (formData) => {\n    setUsers([formData, ...users])\n    setUsersToRender([formData, ...users])\n    M.toast({ html: 'User added!' })\n  }\n\n  const openFormAddUser = () => {\n    if (isFormAddUserVisible) {\n      setIsFormAddUserVisible(false)\n    } else {\n      setIsFormAddUserVisible(true)\n    }\n  }\n\n  const handleRowClick = (user) => {\n    if (!isUserInfoOpen) {\n      setIsUserInfoOpen(true)\n    }\n\n    setUserInfo(user)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Test task for Аэро-Трейд</h1>\n        <div className=\"row\">\n          <button\n            onClick={handleGetData}\n            className=\"col s6 waves-effect waves-light btn pink lighten-2\">Get data</button>\n          {/*<button*/}\n          {/*  onClick={handleGetMaxData}*/}\n          {/*  className=\"col s4 waves-effect waves-light btn purple lighten-2\">Get max data</button>*/}\n          <button\n            onClick={openFormAddUser}\n            className=\"col s6 waves-effect waves-light btn blue lighten-2\">\n            { isFormAddUserVisible ? 'Close form' : 'Add user' }\n          </button>\n        </div>\n        <FormAddUser isVisible={isFormAddUserVisible} onSubmit={handleAddUser} />\n        { isPreloaderVisible && <Preloader /> }\n        { users.length > 0  &&\n          <>\n            <FilterForm\n              setDataForRender={setUsersToRender}\n              data={users} />\n            <div className=\"row table-container\">\n              <Table\n                setUsersToRender={setUsersToRender}\n                handleRowClick={handleRowClick}\n                usersToRender={usersToRender}\n                data={users}/>\n              { isUserInfoOpen && <UserInfo onClose={setIsUserInfoOpen} user={userInfo}/> }\n            </div>\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}